//二叉树的定义
//二叉树是n个节点的有限集合：
//1.或者为空二叉树，即n=0.
//2.或者由一个根节点和两个互不相交的被称为根的左子树和右子树组成。左子树和右子树组成。左子树和右子树又分别是一颗二叉树。
//特点：1.每个节点至多只有两颗子树  2.左右子树不能颠倒（二叉树是有序树）
//有五种状态：
//1.空二叉树
//只有左子树，只有右子树，只有根节点，左右子树都有
//满二叉树：就是每一层的度由一开始，往后逐步乘以二，有2^h-1个节点的二叉树
//特点：1.只有最后一层有叶子节点
//      2.不存在度为一的节点
//      3.按层序从1开始编号，节点i的左孩子为2i，右孩子为2i+1；节点i的父节点为（i/2)向下取整（如果有的话）
//2.完全二叉树
//当且仅当其每个节点都与高度为h的满二叉树中编号为1~n的节点一一对应时，称为完全二叉树
//特点：1.只有最后两层可能有叶子节点（意思就是只有可能在右边从大到小减少）
//      2.最多只有一个度为1的节点
//      3.同上3
//      4.i<=(n/2)（的向下取整）w为分节点，i>(n/2)（的向下取整）为叶子节点（意思是如果一个节点有一个孩子那么这个孩子一定是左孩子）
//二叉排序树：
//左子树上的所有节点的关键字均小于根节点的关键字。
//右子树上所有节点的关键字均大于根节点的关键字。
//左子树和右子树有各是一颗二叉排序树。
//平衡二叉树：树上任一节点的左子树和右子树的深度（高度）之差不超过1。

//二叉树的性质：
//常见考点1：设非空二叉树中度为0、1和2的节点个数分别为n0、n1和n2,则n0=n2+1(叶子节点比二分支节点多一个)
//假设树中节点总数为n,则
//1.n=n0+n1+n2(很好理解，就是把每个度都加起来了）
//2.n=n1+2*n2+1（树的节点数=总度数+1）（不好理解）（这个加的一是根节点）
//用2减1得n0=n2+1(重点）
//常见考点2：二叉树第i层至多有2^(i-1)个节点（i>=1)
//           m叉树第i层至多有m^(i-1)个节点（i>=1)
//考点三：高度为h的二叉树至多有2^h-1个节点（满二叉树）
//        高度为h的m叉树至多有（m^k-1)/(m-1)个节点
//等比数列求和公式：a+aq+aq^2+aq^3+……+aq^(n-1)=a(1-qn)/(1-q)
//完全二叉树的高度h为（log2(n+1))的向上取整或log2(n)的向下取整+1
//高为h的满二叉树共有2^h-1个节点
//高为h-1的满二叉树共有2^（h-1）-1个节点
//所以完全二叉树要大于高度为h-1的满二叉树要小于高度为h的满二叉树
//常见考点2：对于完全二叉树，可以由的节点数n推出度为0，1,2的节点个数为n1,n2,n0
// 完全二叉树最多只有一个度为1的节点，即n1=0或1
// n0=n1+1---->n0+n2一定是奇数
// 若完全二叉树有2k个节点，则必有n1=1,n0=k,n2=k-1。
// 若完全二叉树有2k-1个节点，则必有n1=0,n0=k,n2=k-1。
//

