//顺序表和链表
//顺序表：
//优点：支持随机存取，存储密度高
//缺点：大片连续空间分配不方便，改变容量不方便
// 链表：
//优点：离散的小空间分配方便，改变容量方便
//缺点：不可随机存取，存储密度低
//基本操作：创销，增删改查
//顺序表和链表：就像是静态数组和动态数组一样
// 删除方面：
//问题：为什么不能只释放第一个节点，把后面的就当成脏数据？
//答：不能只释放第一个，每个数据空间你都是申请的，必须手动释放，虽然你找不到后面那些数据了，但是实际还是占用了空间（任务管理器里面可以看到）
//静态分配：静态数组（系统自动回收空间）
//动态分配：动态数组（malloc,free)这种就绪要手动回收
//新知识点：用malloc申请的空间属于内存中的堆区
//插入：
//顺序表：插入和删除元素要将后续元素都后移/前移（O(n),时间开销主要来自于移动元素）
//链表：插入/删除元素只需修改指针即可（O(n)，时间开销主要来自于查找目标元素）
//查找：
//顺序表：1.按位查找：有顺序O(1)，容易查找。2.按值查找O(n),如果元素有顺序，可以用折半(二分）查找的方式O(log2(n))时间可以找到
//链表：按值查找和按位查找都要从第一个元素开始都是O(n)
//O（）是时间复杂度