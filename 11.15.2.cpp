//本关任务：运用迭代公式，编写一个循环程序，求解出数值x的平方根。
//
//相关知识
//为了完成本关任务，你需要掌握：
//
//求平方根的迭代公式；
//绝对值函数fabs；
//循环语句；
//操作提示
//求x的平方根的迭代公式为Xn + 1 = （Xn + X / Xn） / 2，要求前后两次求出的差的绝对值 < 1e-5(也即是10的 - 5次方, 0.00001)；
//    绝对值函数fabs（Xn + 1 - Xn）表示Xn + 1与Xn之差的绝对值。在main（）函数之前应该加上头文件#include<math.h>
//    算法描述如下： （1）设定一个X的初值X0，假定X0 = X / 2； （2）通过迭代公式求出X1，X1与真正的平方根相比误差很大； （3）重复步骤（2），直到前后两次求出的X值满足以下关系： | Xn + 1 - Xn | < 1e-5(也即是10的 - 5次方)
//    编程要求
//    根据提示在右侧编辑器Begin--End之间的区域内补充必要的代码，求解出数值x的平方根；
//    注意：不能直接用平方根公式 / 函数求解本题！
//
//    测试说明
//    平台会对你编写的代码进行测试：
//
//    测试输入：2；
//    预期输出：
//    1.414214
//
//    测试输入：36；
//    预期输出：
//    6.000000
#include <stdio.h>
#include <math.h>

double sqrtIteration(double x) {
    double Xn = x / 2.0; // 初始值X0
    double Xn1;
    do {
        Xn1 = (Xn + x / Xn) / 2; // 迭代公式
        if (fabs(Xn1 - Xn) < 1e-5) { // 判断前后两次求出的差的绝对值是否小于1e-5
            break;
        }
        Xn = Xn1; // 更新Xn为Xn1，进行下一次迭代
    } while (1);
    return Xn1; // 返回求得的平方根
}

int main() {
    double x;
    scanf_s("%lf", &x); // 读取输入的数值x
    printf("%.6f\n", sqrtIteration(x)); // 输出结果，保留6位小数
    return 0;
}