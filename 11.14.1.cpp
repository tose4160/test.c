//函数调用的特点：最后被调用的函数最先执行结束（LIFO)符合栈的特点
//实际上：在函数调用时，需要用一个栈存储空间（系统开辟）
//1.调用返回的地址
//2.实参
//3.局部变量
//队列的运用--树的层次遍历
//队列的运用--图的广度优先遍历
//队列在操作系统中的运用
//打印数据缓冲区--用队列将这些数据组织起来
//特殊矩阵的压缩存储
//数组的存储结构
//一维数组
//起始地址：LOC
//数组元素a[i]的存储地址=LOC+i*sizeof(ElemType)(0<=i<=10)//易错：下标一般是从0开始的）
//二维数组：b[M][N]//M是行数N是列数
//行优先存储：b[i][j]的存储地址=LOC+(i*N+j)*sizeof(ElemType)
//列优先存储：b[i][j]的存储地址=LOC+（j*M+i)*sizeof(ElemType)
//矩阵的存储：//注意下标
//（1）.对称矩阵的压缩存储：
//若n阶方阵中任意一个元素a(i,j)都有a(i,j)=a(j,i)，则该矩阵为对称矩阵
//普通存储：n*n二维数组
//压缩存储的策略：只存储主对角线+下三角区（或上三角区)
//问题一：数组的大小是多少
//1.（1+n)*n/2
//问题二：栈在程序员的角度，对称矩阵压缩存储后怎样才能使用方便呢？
//2.可以实现一个“映射”函数矩阵下标--》一维数组下标（自己推）（等差数列）（注意下标）
//(2).三角矩阵的压缩存储
//下三角矩阵：除了组对角线和下三角区，其余的元素都相同
//上三角矩阵：相反
//压缩策略：按行将下三角和对角线元素存入一维数组中。并在最后一个位置存储常量c(相较于对称矩阵要多一个存储单元）
//三对角矩阵（带状矩阵）
//当|i-j|>1时，有a(i,j)=0(1<=i,j<=n)
///总数：n(行数)*3（每行三个）-2（开始和结尾只有两个）
//前i-1行共有3*（i-1）-1个元素
//a(i,j)是i行第j-i+2个元素
//a(i,j)是第2*i+j-2个元素    //如果数组下标从0开始则需要加一
//稀疏矩阵：非零元素远远少于矩阵元素的个数
//压缩存储策略1：
//顺序存储---三元组<行，列，值>
//结构体加数组
//压缩存储策略2：
//十字链表法--链式存储
//两个链表一个存列，一个存行，像一个坐标轴一样把非零元素穿起来

